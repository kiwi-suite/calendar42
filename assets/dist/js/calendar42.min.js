angular.module("admin42").requires.push("ui.calendar"),angular.module("admin42").requires.push("ui.bootstrap"),angular.module("admin42").filter("exclusiveEndDate",function($filter){var angularDateFilter=$filter("date");return function(date,format,allDay){return allDay&&(date=moment(date).subtract(1,"day").format()),angularDateFilter(date,format)}}).controller("CalendarController",function($scope,$locale,$timeout,$log,toaster,uiCalendarConfig){function getTestEventSources(){var date=new Date,d=date.getDate(),m=date.getMonth(),y=date.getFullYear();return $scope.events=[{title:"All Day",start:new Date(y,m,1,9),end:new Date(y,m,1,21),allDay:!0,location:"New York",info:"All day event test - time truncated"},{title:"Two days all day",start:new Date(y,m,3),end:new Date(y,m,4),allDay:!0,location:"London",info:"Two days"},{title:"Long Event Test",start:moment(new Date(y,m,d-5,9,30)).format("YYYY-MM-DD HH:mm:ssZ"),end:moment().format(),allDay:!0,location:"HD City",info:"Long event test - time truncated"},{title:"Simple",start:moment().format(),info:"Specific Date & Time"}],$scope.events.map($scope.sanitizeEventModel),[$scope.events]}$timeout(function(){for(var calendar in uiCalendarConfig.calendars){$scope.activeCalendar=calendar;break}}),$scope.eventDrop=function(event,delta,revertFunc,jsEvent,ui,view){$scope.updateEvent(event,delta,revertFunc,jsEvent,ui,view),$timeout(function(){toaster.pop("calendar",event.title,"Updated Event Date")})},$scope.eventResize=function(event,delta,revertFunc,jsEvent,ui,view){$scope.updateEvent(event,delta,revertFunc,jsEvent,ui,view),$timeout(function(){toaster.pop("calendar",event.title,"Updated Event Duration")})},$scope.overlay=$(".fc-overlay"),$scope.eventMouseover=function(event,jsEvent){$scope.event=$scope.sanitizeEventModel(angular.copy(event)),$scope.overlay.removeClass("left right top").find(".arrow").removeClass("left right top pull-up");var wrap=$(jsEvent.target).closest(".fc-event"),cal=wrap.closest(".calendar"),left=wrap.offset().left-cal.offset().left,right=cal.width()-(wrap.offset().left-cal.offset().left+wrap.width()),top=cal.height()-(wrap.offset().top-cal.offset().top+wrap.height());right>$scope.overlay.width()?$scope.overlay.addClass("left").find(".arrow").addClass("left pull-up"):left>$scope.overlay.width()?$scope.overlay.addClass("right").find(".arrow").addClass("right pull-up"):$scope.overlay.find(".arrow").addClass("top"),top<$scope.overlay.height()&&$scope.overlay.addClass("top").find(".arrow").removeClass("pull-up").addClass("pull-down"),0==wrap.find(".fc-overlay").length&&wrap.append($scope.overlay)},$scope.precision=400,$scope.lastClickTime=0,$scope.dayClick=function(date){var time=(new Date).getTime();time-$scope.lastClickTime<=$scope.precision&&$scope.addEvent(moment(date)),$scope.lastClickTime=time},$scope.uiConfig={calendar:{height:450,editable:!0,header:{left:"prev",center:"title",right:"next"},lang:$locale.id.split("-")[0],timezone:"local",dayClick:$scope.dayClick,eventDragStart:$scope.eventDragStart,eventDrop:$scope.eventDrop,eventResize:$scope.eventResize,eventMouseover:$scope.eventMouseover,viewRender:function(){}}},$scope.changeView=function(view){uiCalendarConfig.calendars[$scope.activeCalendar].fullCalendar("changeView",view)},$scope.renderCalender=function(){uiCalendarConfig.calendars[$scope.activeCalendar].fullCalendar("render")},$scope.today=function(){uiCalendarConfig.calendars[$scope.activeCalendar].fullCalendar("today")},$scope.addEvent=function(momentDate){$log.warn("open modal"),momentDate=momentDate||moment(),$scope.events.push({title:"New Event",startTimestamp:momentDate.unix(),start:momentDate.format(),allDay:!0,className:["b-l b-2x b-primary"],stick:!0})},$scope.removeEvent=function(index){$scope.events.splice(index,1)},$scope.updateEvent=function(event){$scope.events.map(function(eventModel){eventModel.$$hashKey===event.$$hashKey&&(eventModel.allDay=event.allDay,eventModel.start=event.start,eventModel.end=event.end,$scope.sanitizeEventModel(eventModel))})},$scope.sanitizeEventModel=function(eventModel){return eventModel.start=moment(eventModel.start).format(),eventModel.startTimestamp=moment(eventModel.start).unix(),eventModel.allDay&&moment(eventModel.start).format("YYYY-MM-DD")==moment(eventModel.end).subtract(1,"day").format("YYYY-MM-DD")&&(eventModel.end=null),eventModel.end&&(eventModel.end=moment(eventModel.end).format()),eventModel.className=["b-l b-2x b-primary"],eventModel},$scope.eventSources=getTestEventSources()});